name: promote to production
on:
  release:
    types: [published]
env:
  TEAM_NAME: 'data'
  AWS_PRODUCTION_ACCOUNT:  '479125032639'
  PROJECT: 'analytics'
  APP_NAME: 'event-forwarder'
  ENVIRONMENT: 'production'
  BUILD_DIR: ./build

jobs:       
  promote-to-staging:
    runs-on: ubuntu-latest
    env:
      TF_ACTIONS_VERSION: 0.12.24
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
        registry-url: https://npm.pkg.github.com/
        scope: '@ofx-com'
    - run: npm install
      env:
        NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_TOKEN }}
    - name: Configure environment variables
      uses: ./node_modules/@ofx-com/github-action-configuration
  
    - name: Notify teams channel of Deployment
      uses: toko-bifrost/ms-teams-deploy-card@2.1.2
      with:
        github-token: ${{ github.token }}
        webhook-uri: ${{ secrets.MS_TEAMS_DEPLOYMENT_WEBHOOK_URI }}
        deploy-title: Production Deployment Triggered!

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.PRODUCTION_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.PRODUCTION_AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}
        role-to-assume: arn:aws:iam::${{env.AWS_PRODUCTION_ACCOUNT}}:role/delegation/core-pipeline
        role-duration-seconds: 3600

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'fmt'
        tf_actions_working_dir: ${{ env.BUILD_DIR }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: ${{ env.BUILD_DIR }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: ${{ env.BUILD_DIR }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: ${{ env.BUILD_DIR }}
        args: -var="app_s3_key=${{env.APP_S3_KEY}}/eventforwarder_lambda.zip"
              -var="bucket_name=${{env.LAMBDA_PACKAGE_BUCKET}}"
              -var="environment_suffix=${{env.ENVIRONMENT_SUFFIX}}"
              -var="resource_suffix=${{env.RESOURCE_SUFFIX}}"
              -var="stack_name=${{env.STACK_NAME}}"                                       
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Terraform Apply'
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_version: ${{ env.TF_ACTIONS_VERSION }}
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: ${{ env.BUILD_DIR }}
        args: -var="app_s3_key=${{env.APP_S3_KEY}}/eventforwarder_lambda.zip"
              -var="bucket_name=${{env.LAMBDA_PACKAGE_BUCKET}}"
              -var="environment_suffix=${{env.ENVIRONMENT_SUFFIX}}"
              -var="resource_suffix=${{env.RESOURCE_SUFFIX}}"
              -var="stack_name=${{env.STACK_NAME}}"          
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}